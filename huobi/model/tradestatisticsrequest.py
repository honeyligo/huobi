from huobi.impl.utils.channelparser import ChannelParser
from huobi.impl.utils.timeservice import convert_cst_in_millisecond_to_utc
from huobi.model.tradestatistics import TradeStatistics


class TradeStatisticsRequest:
    """
    The 24H trade statistics received by request of trade statistics only once.

    :member
        symbol: The symbol you subscribed.
        timestamp: The UNIX formatted timestamp generated by server in UTC.
        trade_statistics: The trade statistics.
    """
    def __init__(self):
        self.symbol = ""
        self.timestamp = 0
        self.trade_statistics = TradeStatistics()

    @staticmethod
    def json_parse(json_wrapper):
        ch = json_wrapper.get_string("rep")
        parse = ChannelParser(ch)
        trade_statistics_event = TradeStatisticsRequest()
        trade_statistics_event.symbol = parse.symbol
        ts = convert_cst_in_millisecond_to_utc(json_wrapper.get_int("ts"))
        trade_statistics_event.timestamp = ts
        tick = json_wrapper.get_object("data")
        statistics = TradeStatistics.json_parse(tick, ts)
        trade_statistics_event.trade_statistics = statistics
        return trade_statistics_event

    def print_object(self, format_data=""):
        from huobi.base.printobject import PrintBasic
        PrintBasic.print_basic(self.timestamp, format_data + "Timestamp")
        PrintBasic.print_basic(self.symbol, format_data + "Symbol")
        self.trade_statistics.print_object()
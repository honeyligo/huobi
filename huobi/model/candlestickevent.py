from huobi.constant.result import OutputKey
from huobi.impl.utils import *
from huobi.impl.utils.channelparser import ChannelParser
from huobi.impl.utils.timeservice import convert_cst_in_millisecond_to_utc
from huobi.model.constant import *
from huobi.model.candlestick import Candlestick


class CandlestickEvent:
    """
    The candlestick/kline data received by subscription of candlestick/kline.

    :member
        symbol: the symbol you subscribed.
        timestamp: the UNIX formatted timestamp generated by server in UTC.
        interval: candlestick/kline interval you subscribed.
        data: the data of candlestick/kline.

    """

    def __init__(self):
        self.symbol = ""
        self.timestamp = 0
        self.interval = CandlestickInterval.INVALID
        self.data = Candlestick()

    @staticmethod
    def json_parse(json_wrapper):
        ch = json_wrapper.get_string(OutputKey.KeyChannelCh)
        parse = ChannelParser(ch)
        candlestick_event = CandlestickEvent()
        candlestick_event.symbol = parse.symbol
        candlestick_event.interval = ""
        candlestick_event.timestamp = convert_cst_in_millisecond_to_utc(json_wrapper.get_int("ts"))
        tick = json_wrapper.get_object(OutputKey.KeyTick)
        data = Candlestick.json_parse(tick)
        candlestick_event.data = data
        return candlestick_event
